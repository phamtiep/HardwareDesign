// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matrix_conv.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrix_conv::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrix_conv::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> matrix_conv::ap_ST_fsm_state1 = "1";
const sc_lv<8> matrix_conv::ap_ST_fsm_state2 = "10";
const sc_lv<8> matrix_conv::ap_ST_fsm_state3 = "100";
const sc_lv<8> matrix_conv::ap_ST_fsm_state4 = "1000";
const sc_lv<8> matrix_conv::ap_ST_fsm_state5 = "10000";
const sc_lv<8> matrix_conv::ap_ST_fsm_state6 = "100000";
const sc_lv<8> matrix_conv::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> matrix_conv::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> matrix_conv::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> matrix_conv::ap_const_lv32_1 = "1";
const sc_lv<1> matrix_conv::ap_const_lv1_0 = "0";
const sc_lv<32> matrix_conv::ap_const_lv32_2 = "10";
const sc_lv<32> matrix_conv::ap_const_lv32_3 = "11";
const sc_lv<32> matrix_conv::ap_const_lv32_4 = "100";
const sc_lv<32> matrix_conv::ap_const_lv32_5 = "101";
const sc_lv<32> matrix_conv::ap_const_lv32_6 = "110";
const sc_lv<4> matrix_conv::ap_const_lv4_0 = "0000";
const sc_lv<1> matrix_conv::ap_const_lv1_1 = "1";
const sc_lv<32> matrix_conv::ap_const_lv32_7 = "111";
const sc_lv<16> matrix_conv::ap_const_lv16_0 = "0000000000000000";
const sc_lv<2> matrix_conv::ap_const_lv2_0 = "00";
const sc_lv<3> matrix_conv::ap_const_lv3_6 = "110";
const sc_lv<3> matrix_conv::ap_const_lv3_5 = "101";
const sc_lv<3> matrix_conv::ap_const_lv3_4 = "100";
const sc_lv<3> matrix_conv::ap_const_lv3_3 = "11";
const sc_lv<3> matrix_conv::ap_const_lv3_2 = "10";
const sc_lv<3> matrix_conv::ap_const_lv3_1 = "1";
const sc_lv<3> matrix_conv::ap_const_lv3_0 = "000";
const sc_lv<3> matrix_conv::ap_const_lv3_7 = "111";
const sc_lv<4> matrix_conv::ap_const_lv4_8 = "1000";
const sc_lv<4> matrix_conv::ap_const_lv4_1 = "1";
const sc_lv<2> matrix_conv::ap_const_lv2_3 = "11";
const sc_lv<2> matrix_conv::ap_const_lv2_1 = "1";
const bool matrix_conv::ap_const_boolean_1 = true;

matrix_conv::matrix_conv(sc_module_name name) : sc_module(name), mVcdFile(0) {
    matrix_conv_mux_1bkb_U1 = new matrix_conv_mux_1bkb<1,1,8,8,8,8,8,8,8,8,8,8,4,8>("matrix_conv_mux_1bkb_U1");
    matrix_conv_mux_1bkb_U1->din0(a_0_q0);
    matrix_conv_mux_1bkb_U1->din1(a_1_q0);
    matrix_conv_mux_1bkb_U1->din2(a_2_q0);
    matrix_conv_mux_1bkb_U1->din3(a_3_q0);
    matrix_conv_mux_1bkb_U1->din4(a_4_q0);
    matrix_conv_mux_1bkb_U1->din5(a_5_q0);
    matrix_conv_mux_1bkb_U1->din6(a_6_q0);
    matrix_conv_mux_1bkb_U1->din7(a_7_q0);
    matrix_conv_mux_1bkb_U1->din8(a_8_q0);
    matrix_conv_mux_1bkb_U1->din9(a_9_q0);
    matrix_conv_mux_1bkb_U1->din10(tmp_4_t_reg_638);
    matrix_conv_mux_1bkb_U1->dout(tmp_10_fu_559_p12);
    matrix_conv_mux_3cud_U2 = new matrix_conv_mux_3cud<1,1,8,8,8,2,8>("matrix_conv_mux_3cud_U2");
    matrix_conv_mux_3cud_U2->din0(b_0_q0);
    matrix_conv_mux_3cud_U2->din1(b_1_q0);
    matrix_conv_mux_3cud_U2->din2(b_2_q0);
    matrix_conv_mux_3cud_U2->din3(m_reg_419);
    matrix_conv_mux_3cud_U2->dout(tmp_11_fu_584_p5);
    matrix_conv_mac_mdEe_U3 = new matrix_conv_mac_mdEe<1,1,8,8,16,16>("matrix_conv_mac_mdEe_U3");
    matrix_conv_mac_mdEe_U3->din0(tmp_11_reg_721);
    matrix_conv_mac_mdEe_U3->din1(tmp_10_reg_716);
    matrix_conv_mac_mdEe_U3->din2(sum_1_reg_431);
    matrix_conv_mac_mdEe_U3->dout(grp_fu_602_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_0_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_9_fu_538_p1 );

    SC_METHOD(thread_a_0_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_a_1_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_9_fu_538_p1 );

    SC_METHOD(thread_a_1_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_a_2_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_9_fu_538_p1 );

    SC_METHOD(thread_a_2_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_a_3_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_9_fu_538_p1 );

    SC_METHOD(thread_a_3_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_a_4_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_9_fu_538_p1 );

    SC_METHOD(thread_a_4_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_a_5_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_9_fu_538_p1 );

    SC_METHOD(thread_a_5_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_a_6_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_9_fu_538_p1 );

    SC_METHOD(thread_a_6_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_a_7_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_9_fu_538_p1 );

    SC_METHOD(thread_a_7_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_a_8_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_9_fu_538_p1 );

    SC_METHOD(thread_a_8_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_a_9_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_9_fu_538_p1 );

    SC_METHOD(thread_a_9_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_454_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_454_p2 );

    SC_METHOD(thread_b_0_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_1_fu_552_p1 );

    SC_METHOD(thread_b_0_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_b_1_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_1_fu_552_p1 );

    SC_METHOD(thread_b_1_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_b_2_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_1_fu_552_p1 );

    SC_METHOD(thread_b_2_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_exitcond1_fu_482_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( m_reg_419 );

    SC_METHOD(thread_exitcond2_fu_470_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_387 );

    SC_METHOD(thread_exitcond3_fu_454_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_375 );

    SC_METHOD(thread_exitcond_fu_520_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( n_reg_443 );

    SC_METHOD(thread_i_1_fu_460_p2);
    sensitive << ( i_reg_375 );

    SC_METHOD(thread_j_1_fu_476_p2);
    sensitive << ( j_reg_387 );

    SC_METHOD(thread_m_1_fu_488_p2);
    sensitive << ( m_reg_419 );

    SC_METHOD(thread_n_1_fu_526_p2);
    sensitive << ( n_reg_443 );

    SC_METHOD(thread_n_cast2_fu_516_p1);
    sensitive << ( n_reg_443 );

    SC_METHOD(thread_res_0_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_2_fu_504_p1 );

    SC_METHOD(thread_res_0_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_0_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sum_reg_399 );

    SC_METHOD(thread_res_0_we0);
    sensitive << ( tmp_12_reg_618 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_482_p2 );

    SC_METHOD(thread_res_1_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_2_fu_504_p1 );

    SC_METHOD(thread_res_1_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_1_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sum_reg_399 );

    SC_METHOD(thread_res_1_we0);
    sensitive << ( tmp_12_reg_618 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_482_p2 );

    SC_METHOD(thread_res_2_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_2_fu_504_p1 );

    SC_METHOD(thread_res_2_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_2_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sum_reg_399 );

    SC_METHOD(thread_res_2_we0);
    sensitive << ( tmp_12_reg_618 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_482_p2 );

    SC_METHOD(thread_res_3_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_2_fu_504_p1 );

    SC_METHOD(thread_res_3_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_3_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sum_reg_399 );

    SC_METHOD(thread_res_3_we0);
    sensitive << ( tmp_12_reg_618 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_482_p2 );

    SC_METHOD(thread_res_4_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_2_fu_504_p1 );

    SC_METHOD(thread_res_4_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_4_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sum_reg_399 );

    SC_METHOD(thread_res_4_we0);
    sensitive << ( tmp_12_reg_618 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_482_p2 );

    SC_METHOD(thread_res_5_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_2_fu_504_p1 );

    SC_METHOD(thread_res_5_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_5_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sum_reg_399 );

    SC_METHOD(thread_res_5_we0);
    sensitive << ( tmp_12_reg_618 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_482_p2 );

    SC_METHOD(thread_res_6_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_2_fu_504_p1 );

    SC_METHOD(thread_res_6_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_6_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sum_reg_399 );

    SC_METHOD(thread_res_6_we0);
    sensitive << ( tmp_12_reg_618 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_482_p2 );

    SC_METHOD(thread_res_7_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_2_fu_504_p1 );

    SC_METHOD(thread_res_7_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_res_7_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sum_reg_399 );

    SC_METHOD(thread_res_7_we0);
    sensitive << ( tmp_12_reg_618 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_482_p2 );

    SC_METHOD(thread_tmp_12_fu_466_p1);
    sensitive << ( i_reg_375 );

    SC_METHOD(thread_tmp_1_fu_552_p1);
    sensitive << ( n_reg_443 );

    SC_METHOD(thread_tmp_2_fu_504_p1);
    sensitive << ( j_reg_387 );

    SC_METHOD(thread_tmp_4_t_fu_498_p2);
    sensitive << ( i_reg_375 );
    sensitive << ( tmp_6_fu_494_p1 );

    SC_METHOD(thread_tmp_6_fu_494_p1);
    sensitive << ( m_reg_419 );

    SC_METHOD(thread_tmp_8_fu_532_p2);
    sensitive << ( j_reg_387 );
    sensitive << ( n_cast2_fu_516_p1 );

    SC_METHOD(thread_tmp_9_fu_538_p1);
    sensitive << ( tmp_8_fu_532_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_454_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_482_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_520_p2 );
    sensitive << ( exitcond2_fu_470_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrix_conv_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_0_address0, "(port)a_0_address0");
    sc_trace(mVcdFile, a_0_ce0, "(port)a_0_ce0");
    sc_trace(mVcdFile, a_0_q0, "(port)a_0_q0");
    sc_trace(mVcdFile, a_1_address0, "(port)a_1_address0");
    sc_trace(mVcdFile, a_1_ce0, "(port)a_1_ce0");
    sc_trace(mVcdFile, a_1_q0, "(port)a_1_q0");
    sc_trace(mVcdFile, a_2_address0, "(port)a_2_address0");
    sc_trace(mVcdFile, a_2_ce0, "(port)a_2_ce0");
    sc_trace(mVcdFile, a_2_q0, "(port)a_2_q0");
    sc_trace(mVcdFile, a_3_address0, "(port)a_3_address0");
    sc_trace(mVcdFile, a_3_ce0, "(port)a_3_ce0");
    sc_trace(mVcdFile, a_3_q0, "(port)a_3_q0");
    sc_trace(mVcdFile, a_4_address0, "(port)a_4_address0");
    sc_trace(mVcdFile, a_4_ce0, "(port)a_4_ce0");
    sc_trace(mVcdFile, a_4_q0, "(port)a_4_q0");
    sc_trace(mVcdFile, a_5_address0, "(port)a_5_address0");
    sc_trace(mVcdFile, a_5_ce0, "(port)a_5_ce0");
    sc_trace(mVcdFile, a_5_q0, "(port)a_5_q0");
    sc_trace(mVcdFile, a_6_address0, "(port)a_6_address0");
    sc_trace(mVcdFile, a_6_ce0, "(port)a_6_ce0");
    sc_trace(mVcdFile, a_6_q0, "(port)a_6_q0");
    sc_trace(mVcdFile, a_7_address0, "(port)a_7_address0");
    sc_trace(mVcdFile, a_7_ce0, "(port)a_7_ce0");
    sc_trace(mVcdFile, a_7_q0, "(port)a_7_q0");
    sc_trace(mVcdFile, a_8_address0, "(port)a_8_address0");
    sc_trace(mVcdFile, a_8_ce0, "(port)a_8_ce0");
    sc_trace(mVcdFile, a_8_q0, "(port)a_8_q0");
    sc_trace(mVcdFile, a_9_address0, "(port)a_9_address0");
    sc_trace(mVcdFile, a_9_ce0, "(port)a_9_ce0");
    sc_trace(mVcdFile, a_9_q0, "(port)a_9_q0");
    sc_trace(mVcdFile, b_0_address0, "(port)b_0_address0");
    sc_trace(mVcdFile, b_0_ce0, "(port)b_0_ce0");
    sc_trace(mVcdFile, b_0_q0, "(port)b_0_q0");
    sc_trace(mVcdFile, b_1_address0, "(port)b_1_address0");
    sc_trace(mVcdFile, b_1_ce0, "(port)b_1_ce0");
    sc_trace(mVcdFile, b_1_q0, "(port)b_1_q0");
    sc_trace(mVcdFile, b_2_address0, "(port)b_2_address0");
    sc_trace(mVcdFile, b_2_ce0, "(port)b_2_ce0");
    sc_trace(mVcdFile, b_2_q0, "(port)b_2_q0");
    sc_trace(mVcdFile, res_0_address0, "(port)res_0_address0");
    sc_trace(mVcdFile, res_0_ce0, "(port)res_0_ce0");
    sc_trace(mVcdFile, res_0_we0, "(port)res_0_we0");
    sc_trace(mVcdFile, res_0_d0, "(port)res_0_d0");
    sc_trace(mVcdFile, res_1_address0, "(port)res_1_address0");
    sc_trace(mVcdFile, res_1_ce0, "(port)res_1_ce0");
    sc_trace(mVcdFile, res_1_we0, "(port)res_1_we0");
    sc_trace(mVcdFile, res_1_d0, "(port)res_1_d0");
    sc_trace(mVcdFile, res_2_address0, "(port)res_2_address0");
    sc_trace(mVcdFile, res_2_ce0, "(port)res_2_ce0");
    sc_trace(mVcdFile, res_2_we0, "(port)res_2_we0");
    sc_trace(mVcdFile, res_2_d0, "(port)res_2_d0");
    sc_trace(mVcdFile, res_3_address0, "(port)res_3_address0");
    sc_trace(mVcdFile, res_3_ce0, "(port)res_3_ce0");
    sc_trace(mVcdFile, res_3_we0, "(port)res_3_we0");
    sc_trace(mVcdFile, res_3_d0, "(port)res_3_d0");
    sc_trace(mVcdFile, res_4_address0, "(port)res_4_address0");
    sc_trace(mVcdFile, res_4_ce0, "(port)res_4_ce0");
    sc_trace(mVcdFile, res_4_we0, "(port)res_4_we0");
    sc_trace(mVcdFile, res_4_d0, "(port)res_4_d0");
    sc_trace(mVcdFile, res_5_address0, "(port)res_5_address0");
    sc_trace(mVcdFile, res_5_ce0, "(port)res_5_ce0");
    sc_trace(mVcdFile, res_5_we0, "(port)res_5_we0");
    sc_trace(mVcdFile, res_5_d0, "(port)res_5_d0");
    sc_trace(mVcdFile, res_6_address0, "(port)res_6_address0");
    sc_trace(mVcdFile, res_6_ce0, "(port)res_6_ce0");
    sc_trace(mVcdFile, res_6_we0, "(port)res_6_we0");
    sc_trace(mVcdFile, res_6_d0, "(port)res_6_d0");
    sc_trace(mVcdFile, res_7_address0, "(port)res_7_address0");
    sc_trace(mVcdFile, res_7_ce0, "(port)res_7_ce0");
    sc_trace(mVcdFile, res_7_we0, "(port)res_7_we0");
    sc_trace(mVcdFile, res_7_d0, "(port)res_7_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_1_fu_460_p2, "i_1_fu_460_p2");
    sc_trace(mVcdFile, i_1_reg_613, "i_1_reg_613");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_12_fu_466_p1, "tmp_12_fu_466_p1");
    sc_trace(mVcdFile, tmp_12_reg_618, "tmp_12_reg_618");
    sc_trace(mVcdFile, exitcond3_fu_454_p2, "exitcond3_fu_454_p2");
    sc_trace(mVcdFile, j_1_fu_476_p2, "j_1_fu_476_p2");
    sc_trace(mVcdFile, j_1_reg_625, "j_1_reg_625");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, m_1_fu_488_p2, "m_1_fu_488_p2");
    sc_trace(mVcdFile, m_1_reg_633, "m_1_reg_633");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_4_t_fu_498_p2, "tmp_4_t_fu_498_p2");
    sc_trace(mVcdFile, tmp_4_t_reg_638, "tmp_4_t_reg_638");
    sc_trace(mVcdFile, exitcond1_fu_482_p2, "exitcond1_fu_482_p2");
    sc_trace(mVcdFile, n_1_fu_526_p2, "n_1_fu_526_p2");
    sc_trace(mVcdFile, n_1_reg_646, "n_1_reg_646");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond_fu_520_p2, "exitcond_fu_520_p2");
    sc_trace(mVcdFile, tmp_10_fu_559_p12, "tmp_10_fu_559_p12");
    sc_trace(mVcdFile, tmp_10_reg_716, "tmp_10_reg_716");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_11_fu_584_p5, "tmp_11_fu_584_p5");
    sc_trace(mVcdFile, tmp_11_reg_721, "tmp_11_reg_721");
    sc_trace(mVcdFile, grp_fu_602_p3, "grp_fu_602_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_reg_375, "i_reg_375");
    sc_trace(mVcdFile, exitcond2_fu_470_p2, "exitcond2_fu_470_p2");
    sc_trace(mVcdFile, j_reg_387, "j_reg_387");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, sum_reg_399, "sum_reg_399");
    sc_trace(mVcdFile, m_reg_419, "m_reg_419");
    sc_trace(mVcdFile, sum_1_reg_431, "sum_1_reg_431");
    sc_trace(mVcdFile, n_reg_443, "n_reg_443");
    sc_trace(mVcdFile, tmp_2_fu_504_p1, "tmp_2_fu_504_p1");
    sc_trace(mVcdFile, tmp_9_fu_538_p1, "tmp_9_fu_538_p1");
    sc_trace(mVcdFile, tmp_1_fu_552_p1, "tmp_1_fu_552_p1");
    sc_trace(mVcdFile, tmp_6_fu_494_p1, "tmp_6_fu_494_p1");
    sc_trace(mVcdFile, n_cast2_fu_516_p1, "n_cast2_fu_516_p1");
    sc_trace(mVcdFile, tmp_8_fu_532_p2, "tmp_8_fu_532_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("matrix_conv.hdltvin.dat");
    mHdltvoutHandle.open("matrix_conv.hdltvout.dat");
}

matrix_conv::~matrix_conv() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete matrix_conv_mux_1bkb_U1;
    delete matrix_conv_mux_3cud_U2;
    delete matrix_conv_mac_mdEe_U3;
}

void matrix_conv::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_470_p2.read(), ap_const_lv1_1))) {
        i_reg_375 = i_1_reg_613.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_375 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        j_reg_387 = j_1_reg_625.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_454_p2.read(), ap_const_lv1_0))) {
        j_reg_387 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_520_p2.read(), ap_const_lv1_1))) {
        m_reg_419 = m_1_reg_633.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_470_p2.read()))) {
        m_reg_419 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        n_reg_443 = n_1_reg_646.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_482_p2.read()))) {
        n_reg_443 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        sum_1_reg_431 = grp_fu_602_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_482_p2.read()))) {
        sum_1_reg_431 = sum_reg_399.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_520_p2.read(), ap_const_lv1_1))) {
        sum_reg_399 = sum_1_reg_431.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_470_p2.read()))) {
        sum_reg_399 = ap_const_lv16_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_613 = i_1_fu_460_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_1_reg_625 = j_1_fu_476_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        m_1_reg_633 = m_1_fu_488_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        n_1_reg_646 = n_1_fu_526_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_10_reg_716 = tmp_10_fu_559_p12.read();
        tmp_11_reg_721 = tmp_11_fu_584_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_454_p2.read(), ap_const_lv1_0))) {
        tmp_12_reg_618 = tmp_12_fu_466_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_482_p2.read()))) {
        tmp_4_t_reg_638 = tmp_4_t_fu_498_p2.read();
    }
}

void matrix_conv::thread_a_0_address0() {
    a_0_address0 =  (sc_lv<4>) (tmp_9_fu_538_p1.read());
}

void matrix_conv::thread_a_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_0_ce0 = ap_const_logic_1;
    } else {
        a_0_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_a_1_address0() {
    a_1_address0 =  (sc_lv<4>) (tmp_9_fu_538_p1.read());
}

void matrix_conv::thread_a_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_1_ce0 = ap_const_logic_1;
    } else {
        a_1_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_a_2_address0() {
    a_2_address0 =  (sc_lv<4>) (tmp_9_fu_538_p1.read());
}

void matrix_conv::thread_a_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_2_ce0 = ap_const_logic_1;
    } else {
        a_2_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_a_3_address0() {
    a_3_address0 =  (sc_lv<4>) (tmp_9_fu_538_p1.read());
}

void matrix_conv::thread_a_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_3_ce0 = ap_const_logic_1;
    } else {
        a_3_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_a_4_address0() {
    a_4_address0 =  (sc_lv<4>) (tmp_9_fu_538_p1.read());
}

void matrix_conv::thread_a_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_4_ce0 = ap_const_logic_1;
    } else {
        a_4_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_a_5_address0() {
    a_5_address0 =  (sc_lv<4>) (tmp_9_fu_538_p1.read());
}

void matrix_conv::thread_a_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_5_ce0 = ap_const_logic_1;
    } else {
        a_5_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_a_6_address0() {
    a_6_address0 =  (sc_lv<4>) (tmp_9_fu_538_p1.read());
}

void matrix_conv::thread_a_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_6_ce0 = ap_const_logic_1;
    } else {
        a_6_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_a_7_address0() {
    a_7_address0 =  (sc_lv<4>) (tmp_9_fu_538_p1.read());
}

void matrix_conv::thread_a_7_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_7_ce0 = ap_const_logic_1;
    } else {
        a_7_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_a_8_address0() {
    a_8_address0 =  (sc_lv<4>) (tmp_9_fu_538_p1.read());
}

void matrix_conv::thread_a_8_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_8_ce0 = ap_const_logic_1;
    } else {
        a_8_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_a_9_address0() {
    a_9_address0 =  (sc_lv<4>) (tmp_9_fu_538_p1.read());
}

void matrix_conv::thread_a_9_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_9_ce0 = ap_const_logic_1;
    } else {
        a_9_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void matrix_conv::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void matrix_conv::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void matrix_conv::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void matrix_conv::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void matrix_conv::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void matrix_conv::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void matrix_conv::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void matrix_conv::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_454_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrix_conv::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrix_conv::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_454_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrix_conv::thread_b_0_address0() {
    b_0_address0 =  (sc_lv<2>) (tmp_1_fu_552_p1.read());
}

void matrix_conv::thread_b_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        b_0_ce0 = ap_const_logic_1;
    } else {
        b_0_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_b_1_address0() {
    b_1_address0 =  (sc_lv<2>) (tmp_1_fu_552_p1.read());
}

void matrix_conv::thread_b_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        b_1_ce0 = ap_const_logic_1;
    } else {
        b_1_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_b_2_address0() {
    b_2_address0 =  (sc_lv<2>) (tmp_1_fu_552_p1.read());
}

void matrix_conv::thread_b_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        b_2_ce0 = ap_const_logic_1;
    } else {
        b_2_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_exitcond1_fu_482_p2() {
    exitcond1_fu_482_p2 = (!m_reg_419.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(m_reg_419.read() == ap_const_lv2_3);
}

void matrix_conv::thread_exitcond2_fu_470_p2() {
    exitcond2_fu_470_p2 = (!j_reg_387.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_387.read() == ap_const_lv4_8);
}

void matrix_conv::thread_exitcond3_fu_454_p2() {
    exitcond3_fu_454_p2 = (!i_reg_375.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_375.read() == ap_const_lv4_8);
}

void matrix_conv::thread_exitcond_fu_520_p2() {
    exitcond_fu_520_p2 = (!n_reg_443.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(n_reg_443.read() == ap_const_lv2_3);
}

void matrix_conv::thread_i_1_fu_460_p2() {
    i_1_fu_460_p2 = (!i_reg_375.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_375.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrix_conv::thread_j_1_fu_476_p2() {
    j_1_fu_476_p2 = (!j_reg_387.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_reg_387.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrix_conv::thread_m_1_fu_488_p2() {
    m_1_fu_488_p2 = (!m_reg_419.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(m_reg_419.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrix_conv::thread_n_1_fu_526_p2() {
    n_1_fu_526_p2 = (!n_reg_443.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(n_reg_443.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrix_conv::thread_n_cast2_fu_516_p1() {
    n_cast2_fu_516_p1 = esl_zext<4,2>(n_reg_443.read());
}

void matrix_conv::thread_res_0_address0() {
    res_0_address0 =  (sc_lv<3>) (tmp_2_fu_504_p1.read());
}

void matrix_conv::thread_res_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_0_ce0 = ap_const_logic_1;
    } else {
        res_0_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_res_0_d0() {
    res_0_d0 = sum_reg_399.read();
}

void matrix_conv::thread_res_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_482_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,3,3>(tmp_12_reg_618.read(), ap_const_lv3_0))) {
        res_0_we0 = ap_const_logic_1;
    } else {
        res_0_we0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_res_1_address0() {
    res_1_address0 =  (sc_lv<3>) (tmp_2_fu_504_p1.read());
}

void matrix_conv::thread_res_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_1_ce0 = ap_const_logic_1;
    } else {
        res_1_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_res_1_d0() {
    res_1_d0 = sum_reg_399.read();
}

void matrix_conv::thread_res_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_482_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,3,3>(tmp_12_reg_618.read(), ap_const_lv3_1))) {
        res_1_we0 = ap_const_logic_1;
    } else {
        res_1_we0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_res_2_address0() {
    res_2_address0 =  (sc_lv<3>) (tmp_2_fu_504_p1.read());
}

void matrix_conv::thread_res_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_2_ce0 = ap_const_logic_1;
    } else {
        res_2_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_res_2_d0() {
    res_2_d0 = sum_reg_399.read();
}

void matrix_conv::thread_res_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_482_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,3,3>(tmp_12_reg_618.read(), ap_const_lv3_2))) {
        res_2_we0 = ap_const_logic_1;
    } else {
        res_2_we0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_res_3_address0() {
    res_3_address0 =  (sc_lv<3>) (tmp_2_fu_504_p1.read());
}

void matrix_conv::thread_res_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_3_ce0 = ap_const_logic_1;
    } else {
        res_3_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_res_3_d0() {
    res_3_d0 = sum_reg_399.read();
}

void matrix_conv::thread_res_3_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_482_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,3,3>(tmp_12_reg_618.read(), ap_const_lv3_3))) {
        res_3_we0 = ap_const_logic_1;
    } else {
        res_3_we0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_res_4_address0() {
    res_4_address0 =  (sc_lv<3>) (tmp_2_fu_504_p1.read());
}

void matrix_conv::thread_res_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_4_ce0 = ap_const_logic_1;
    } else {
        res_4_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_res_4_d0() {
    res_4_d0 = sum_reg_399.read();
}

void matrix_conv::thread_res_4_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_482_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,3,3>(tmp_12_reg_618.read(), ap_const_lv3_4))) {
        res_4_we0 = ap_const_logic_1;
    } else {
        res_4_we0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_res_5_address0() {
    res_5_address0 =  (sc_lv<3>) (tmp_2_fu_504_p1.read());
}

void matrix_conv::thread_res_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_5_ce0 = ap_const_logic_1;
    } else {
        res_5_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_res_5_d0() {
    res_5_d0 = sum_reg_399.read();
}

void matrix_conv::thread_res_5_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_482_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,3,3>(tmp_12_reg_618.read(), ap_const_lv3_5))) {
        res_5_we0 = ap_const_logic_1;
    } else {
        res_5_we0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_res_6_address0() {
    res_6_address0 =  (sc_lv<3>) (tmp_2_fu_504_p1.read());
}

void matrix_conv::thread_res_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_6_ce0 = ap_const_logic_1;
    } else {
        res_6_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_res_6_d0() {
    res_6_d0 = sum_reg_399.read();
}

void matrix_conv::thread_res_6_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_482_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,3,3>(tmp_12_reg_618.read(), ap_const_lv3_6))) {
        res_6_we0 = ap_const_logic_1;
    } else {
        res_6_we0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_res_7_address0() {
    res_7_address0 =  (sc_lv<3>) (tmp_2_fu_504_p1.read());
}

void matrix_conv::thread_res_7_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        res_7_ce0 = ap_const_logic_1;
    } else {
        res_7_ce0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_res_7_d0() {
    res_7_d0 = sum_reg_399.read();
}

void matrix_conv::thread_res_7_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_482_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,3,3>(tmp_12_reg_618.read(), ap_const_lv3_7))) {
        res_7_we0 = ap_const_logic_1;
    } else {
        res_7_we0 = ap_const_logic_0;
    }
}

void matrix_conv::thread_tmp_12_fu_466_p1() {
    tmp_12_fu_466_p1 = i_reg_375.read().range(3-1, 0);
}

void matrix_conv::thread_tmp_1_fu_552_p1() {
    tmp_1_fu_552_p1 = esl_zext<64,2>(n_reg_443.read());
}

void matrix_conv::thread_tmp_2_fu_504_p1() {
    tmp_2_fu_504_p1 = esl_zext<64,4>(j_reg_387.read());
}

void matrix_conv::thread_tmp_4_t_fu_498_p2() {
    tmp_4_t_fu_498_p2 = (!tmp_6_fu_494_p1.read().is_01() || !i_reg_375.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_6_fu_494_p1.read()) + sc_biguint<4>(i_reg_375.read()));
}

void matrix_conv::thread_tmp_6_fu_494_p1() {
    tmp_6_fu_494_p1 = esl_zext<4,2>(m_reg_419.read());
}

void matrix_conv::thread_tmp_8_fu_532_p2() {
    tmp_8_fu_532_p2 = (!n_cast2_fu_516_p1.read().is_01() || !j_reg_387.read().is_01())? sc_lv<4>(): (sc_biguint<4>(n_cast2_fu_516_p1.read()) + sc_biguint<4>(j_reg_387.read()));
}

void matrix_conv::thread_tmp_9_fu_538_p1() {
    tmp_9_fu_538_p1 = esl_zext<64,4>(tmp_8_fu_532_p2.read());
}

void matrix_conv::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_454_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_470_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond1_fu_482_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond_fu_520_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

void matrix_conv::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_address0\" :  \"" << a_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_0_ce0\" :  \"" << a_0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_0_q0\" :  \"" << a_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_address0\" :  \"" << a_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_1_ce0\" :  \"" << a_1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_1_q0\" :  \"" << a_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_address0\" :  \"" << a_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_2_ce0\" :  \"" << a_2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_2_q0\" :  \"" << a_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_address0\" :  \"" << a_3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_3_ce0\" :  \"" << a_3_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_3_q0\" :  \"" << a_3_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_4_address0\" :  \"" << a_4_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_4_ce0\" :  \"" << a_4_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_4_q0\" :  \"" << a_4_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_5_address0\" :  \"" << a_5_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_5_ce0\" :  \"" << a_5_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_5_q0\" :  \"" << a_5_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_6_address0\" :  \"" << a_6_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_6_ce0\" :  \"" << a_6_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_6_q0\" :  \"" << a_6_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_7_address0\" :  \"" << a_7_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_7_ce0\" :  \"" << a_7_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_7_q0\" :  \"" << a_7_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_8_address0\" :  \"" << a_8_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_8_ce0\" :  \"" << a_8_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_8_q0\" :  \"" << a_8_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_9_address0\" :  \"" << a_9_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_9_ce0\" :  \"" << a_9_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_9_q0\" :  \"" << a_9_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_address0\" :  \"" << b_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_0_ce0\" :  \"" << b_0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_0_q0\" :  \"" << b_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_address0\" :  \"" << b_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_1_ce0\" :  \"" << b_1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_1_q0\" :  \"" << b_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_address0\" :  \"" << b_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_2_ce0\" :  \"" << b_2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_2_q0\" :  \"" << b_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_0_address0\" :  \"" << res_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_0_ce0\" :  \"" << res_0_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_0_we0\" :  \"" << res_0_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_0_d0\" :  \"" << res_0_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_1_address0\" :  \"" << res_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_1_ce0\" :  \"" << res_1_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_1_we0\" :  \"" << res_1_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_1_d0\" :  \"" << res_1_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_2_address0\" :  \"" << res_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_2_ce0\" :  \"" << res_2_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_2_we0\" :  \"" << res_2_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_2_d0\" :  \"" << res_2_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_3_address0\" :  \"" << res_3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_3_ce0\" :  \"" << res_3_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_3_we0\" :  \"" << res_3_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_3_d0\" :  \"" << res_3_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_4_address0\" :  \"" << res_4_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_4_ce0\" :  \"" << res_4_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_4_we0\" :  \"" << res_4_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_4_d0\" :  \"" << res_4_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_5_address0\" :  \"" << res_5_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_5_ce0\" :  \"" << res_5_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_5_we0\" :  \"" << res_5_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_5_d0\" :  \"" << res_5_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_6_address0\" :  \"" << res_6_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_6_ce0\" :  \"" << res_6_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_6_we0\" :  \"" << res_6_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_6_d0\" :  \"" << res_6_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_7_address0\" :  \"" << res_7_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_7_ce0\" :  \"" << res_7_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_7_we0\" :  \"" << res_7_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_7_d0\" :  \"" << res_7_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

